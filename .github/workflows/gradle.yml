name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

env:
  S3_BUCKET_NAME: ppiyak-bucket
  AWS_REGION: ap-northeast-2
  CODEDEPLOY_NAME: github-actions
  CODEDEPLOY_GROUP: ppiyak-github-actions-group
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew 

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: build/libs

    - name: Make zip file
      run: zip -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Retrieve Secrets from AWS Secrets Manager
      id: retrieve-secrets
      run: |
        echo "Fetching secrets from AWS Secrets Manager..."
        SECRETS=$(aws secretsmanager get-secret-value --secret-id project-dose-variables --query SecretString --output text)
        echo "EMAIL_USERNAME=$(echo $SECRETS | jq -r '.EMAIL_USERNAME')" >> $GITHUB_ENV
        echo "EMAIL_PASSWORD=$(echo $SECRETS | jq -r '.EMAIL_PASSWORD')" >> $GITHUB_ENV
        echo "DB_PASSWORD=$(echo $SECRETS | jq -r '.DB_PASSWORD')" >> $GITHUB_ENV
        echo "DB_USERNAME=$(echo $SECRETS | jq -r '.DB_USERNAME')" >> $GITHUB_ENV
        echo "KAKAO_CLIENT_ID=$(echo $SECRETS | jq -r '.KAKAO_CLIENT_ID')" >> $GITHUB_ENV
        echo "KAKAO_CLIENT_SECRET=$(echo $SECRETS | jq -r '.KAKAO_CLIENT_SECRET')" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODEDEPLOY_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODEDEPLOY_GROUP --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
